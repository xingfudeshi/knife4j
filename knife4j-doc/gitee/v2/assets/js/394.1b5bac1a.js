(window.webpackJsonp=window.webpackJsonp||[]).push([[394],{744:function(e,v,t){"use strict";t.r(v);var _=t(42),a=Object(_.a)({},(function(){var e=this,v=e.$createElement,t=e._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"_1-1-项目介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-项目介绍"}},[e._v("#")]),e._v(" 1.1 项目介绍")]),e._v(" "),t("p",[t("code",[e._v("Knife4j")]),e._v("的前身是"),t("code",[e._v("swagger-bootstrap-ui")]),e._v(",前身"),t("code",[e._v("swagger-bootstrap-ui")]),e._v("是一个纯"),t("code",[e._v("swagger-ui")]),e._v("的"),t("code",[e._v("ui")]),e._v("皮肤项目")]),e._v(" "),t("p",[e._v("一开始项目初衷是为了写一个增强版本的swagger的前端ui,但是随着项目的发展,面对越来越多的个性化需求,不得不编写后端Java代码以满足新的需求,在"),t("code",[e._v("swagger-bootstrap-ui")]),e._v("的1.8.5~1.9.6版本之间,采用的是后端Java代码和Ui都混合在一个Jar包里面的方式提供给开发者使用.这种方式虽说对于集成swagger来说很方便,只需要引入jar包即可,但是在微服务架构下显得有些臃肿。")]),e._v(" "),t("p",[e._v("因此,项目正式更名为"),t("strong",[e._v("knife4j")]),e._v(",取名knife4j是希望她能像一把匕首一样小巧,轻量,并且功能强悍,更名也是希望把她做成一个为Swagger接口文档服务的通用性解决方案,不仅仅只是专注于前端Ui前端.")]),e._v(" "),t("p",[t("code",[e._v("swagger-bootstrap-ui")]),e._v("的所有特性都会集中在"),t("code",[e._v("knife4j-spring-ui")]),e._v("包中,并且后续也会满足开发者更多的个性化需求.")]),e._v(" "),t("p",[e._v("主要的变化是,项目的相关类包路径更换为"),t("code",[e._v("com.github.xingfudeshi.knife4j")]),e._v("前缀,开发者使用增强注解时需要替换包路径")]),e._v(" "),t("p",[e._v("后端Java代码和ui包分离为多个模块的jar包,以面对在目前微服务架构下,更加方便的使用增强文档注解(使用SpringCloud微服务项目,只需要在网关层集成UI的jar包即可,因此分离前后端)")]),e._v(" "),t("p",[t("strong",[e._v("knife4j")]),e._v("沿用"),t("code",[e._v("swagger-bootstrap-ui")]),e._v("的版本号,第1个版本从1.9.6开始,关于使用方法,请参考文档")]),e._v(" "),t("comment-comment")],1)}),[],!1,null,null,null);v.default=a.exports}}]);
